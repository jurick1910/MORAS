class Tetris{
    static int raz, bodovanje, wait;
    static Array redovi;
    static Tetromino t1, t2;
    static bool rot;
    static Array nextshape;

    //dest.
    function void destructor(){
        do redovi.dispose();
        return;
    }

    function void respawn(int dif){
        var int i;
        let i = 0;
        let t1 = Tetromino.tetrominos(nextshape[i]);
        let t2 = Tetromino.tetrominos(nextshape[i] + 1);
        let i = 2;
        while(rot){
            if(Tetris.kraj()){
                do Tetris.pad(dif);
                let t1 = t2;
                let t2 = Tetromino.tetrominos(nextshape[i]);
                if(i < 7){
                    let i = i + 1;
                }else{
                    let i = 0;
                }
            }else{
                let rot = false;
                do t1.destet();
                do t2.destet();
            }
        }
        return;
    }

    // pad
    function void pad(int dif){
        var Array y, x1;
        var int oblik, rotacija, d;

        // parametri za prvi blok
        let y = t1.gety();
        let x1 = t1.getx1();
        let rotacija = t1.getrot();
        let oblik = t1.getob();

        // sljedeci blok
        do Tetris.brisanje();
        do t2.drawnext();

        while(Tetris.stack(2)){
            if(wait = 0){
                do t1.erase();
                do t1.down(1);
                let wait = dif;
            }
            //lijevo
            if((Keyboard.keyPressed() = 130)){
                if(Tetris.provjera(y, x1, 0)){
                    do t1.erase();
                    do t1.moveLeft();
                }
            }
            //desno
            if((Keyboard.keyPressed() = 132)){
                if(Tetris.provjera(y, x1, 1)){
                    do t1.erase();
                    do t1.moveRight();
                }
            }
            //dole strelica dole
            if((Keyboard.keyPressed() = 133)){
                if(Tetris.stack(3) & Tetris.stack(2) & Tetris.stack(1)){
                    do t1.erase();
                    do t1.down(2);
                }
            }
            // rotacija
            if((Keyboard.keyPressed()=131) & (~(oblik = 2))){
                if(Tetris.prrot() & Tetris.stack(1)){
                    do t1.erase();
                    do t1.rotate();
                    let y = t1.gety();
                    let x1 = t1.getx1();
                }
            }

            do t1.draw();
            do Sys.wait(100);
            let wait = wait - 1;
        }

        // brisanje redova, blokovi 
        do t1.draw();
        do Tetris.newgrid();
        //do Tetris.prgrid(); //provjera grida
        do Tetris.del(x1[0]);
        do Tetris.del(x1[1]);
        do Tetris.del(x1[2]);
        do Tetris.del(x1[3]);
        return;
    }

    // set par.
    function void tetset(int dif){
        var int i;
        let bodovanje = 0;
        let wait = dif;
        let rot = true;
        let redovi = Array.new(315);
        let i = 1;
        while(i<315){
            let redovi[i] = 0;
            let i = i + 1;
        }
        let nextshape = Array.new(7);
        let i = 0;
        while(i < 7){
            let nextshape[0] = 0;
            let nextshape[1] = 1;
            let nextshape[2] = 2;
            let nextshape[3] = 3;
            let nextshape[4] = 4;
            let nextshape[5] = 5;
            let nextshape[6] = 6;
            let i = i + 1;
        }
        return;
    }

    //izgled
    function void izgl(int iz){
        let raz = iz;

        do Screen.drawLine(99, 7, 99, 241);
        do Screen.drawLine(99, 241, 281, 241);
        do Screen.drawLine(281, 7, 281, 241);

        do Output.moveCursor(14, 45);
        do Output.printString("BODOVI: ");
        do Output.printInt(bodovanje);

        do Output.moveCursor(17, 45);
        do Output.printString("Razina: ");
        if(raz = 1){
            do Output.printString("1");
        }
        if(raz = 2){
            do Output.printString("2");
        }
        if(raz = 3){
            do Output.printString("3");
        }

        // next blok
        do Screen.drawLine(330, 17, 330, 117);
        do Screen.drawLine(450, 17, 450, 117);
        do Screen.drawLine(330, 17, 450, 17);
        do Screen.drawLine(330, 117, 450, 117);
        
    	return;
    }

    // del next blok dio
    function void brisanje(){
        do Screen.setColor(false);
        do Screen.drawRectangle(335, 22, 445, 112);
        do Screen.setColor(true);
        return;
    }
    // del redova
    function void del(int n){
        var int i, j;
        let i = 1;

        // provjera jel popunjen
        while(i < 16){
            if(redovi[15*(n+1)+i] = 0){
                return;
            }
            let i = i + 1;
        }
        // dodaj bodove
        let bodovanje = bodovanje + (raz*100);
        let  i = 1;

        // del red
        do Screen.setColor(false);
        while(i < 16){
            let redovi[15*(n+1) +i] = 0;
            do Screen.drawRectangle((i-1)*12 + 100, n*12, (i*12) + 100, (n+1) * 12);
            let i = i + 1;
        }
        do Screen.setColor(true);
        do Output.moveCursor(14, 47);
        do Output.printInt(bodovanje);

        // spustanje redova
        while(n > 0){
            let i = 1;
            while(i < 16){
                let redovi[15*(n+1) + i] = redovi[15*n +i];
                let i = i + 1;
            }
            let  n = n - 1;
        }

        // nac. blok. koji su postavljeni
        do Screen.clearScreen();
        do Tetris.izgl(raz);
        let i = 1;
        let j = 1;
        while(j < 21){
            if (redovi[15*j +i] = 1){
                do Screen.drawRectangle((i-1)*12 + 100, (j-1)*12, i*12 +100, j*12);
            }
            let i = i + 1;
            if(i = 16){
                let j = j + 1;
                let i = 1;
            }
        }
        return;
    }

    // azuriranje grida
    function void newgrid(){
        var Array y, x1;
        var int i;
        let y = t1.gety();
        let x1 = t1.getx1();
        let i = 0;
        while(i < 4){
            let redovi[15*(x1[i] + 1) + y[i]] = 1;
            let i  = i + 1;
        }
        return;
    }

    // visina pada
    function bool stack(int p){
        var Array y, x1;
        let y = t1.gety();
        let x1 = t1.getx1();
        if(((15*(x1[0] + p) + y[0]) > 315) | ((15*(x1[1] + p) + y[1]) > 315) | ((15*(x1[2] + p) + y[2]) > 315) | ((15*(x1[3] + p) + y[3]) > 315)){
            return false;
        }

        if((redovi[15*(x1[0] + p) + y[0]] = 0) & (redovi[15*(x1[1] + p) + y[1]] = 0) & (redovi[15*(x1[2] + p) + y[2]] = 0) & (redovi[15*(x1[3] + p) + y[3]] = 0)){
            return true;
        }else{
            return false;
        }
    }

    // provjera d,l
    function bool provjera(Array y, Array x1, Array lr){
        var int lr1, lr2, lr3, lr4;
        if(lr = 1){
            let lr1 = y[0] + 1;
            let lr2 = y[1] + 1;
            let lr3 = y[2] + 1;
            let lr4 = y[3] + 1;
        }else{
            let lr1 = y[0] - 1;
            let lr2 = y[1] - 1;
            let lr3 = y[2] - 1;
            let lr4 = y[3] - 1;
        }
        if((redovi[15*(x1[0] + 1) +lr1] = 0) & (redovi[15*(x1[1] + 1) +lr2] = 0) & (redovi[15*(x1[2] + 1) +lr3] = 0) & (redovi[15*(x1[3] + 1) +lr4] = 0)){
            return true;
        }else{
            return false;
        }
    }

    // provjera rot
    function bool prrot(){
        var Array x, y, x1, y1;
        var int oblik, rotacija, lr1, lr2, lr3, lr4;
        var int r1, r2, r3, r4;

        let y = t1.gety();
        let x = t1.getx();
        let x1 = t1.getx1();
        let y1 = t1.gety1();
        let rotacija = t1.getrot();
        let oblik = t1.getob();

        //L
        if(oblik = 0){
            if(rotacija = 0){
                let lr1 = y[0] + 2;
                let lr2 = y[1] + 2;
                let lr3 = y[2];
                let lr4 = y[3];
                let r1 = x1[0];
                let r2 = x1[1];
                let r3 = x1[2];
                let r4 = x1[3];
            }
            if(rotacija = 2){
                let lr1 = y[0] + 1;
                let lr2 = y[1];
                let lr3 = y[2] + 3;
                let lr4 = y[3];
                let r1 = x1[0] + 1;
                let r2 = x1[1];
                let r3 = x1[2] + 1;
                let r4 = x1[3];
            }
        }
        //J
        if(oblik = 1){
            if(rotacija = 0){
                let lr1 = y[0] - 1;
                let lr2 = y[1];
                let lr3 = y[2] + 1;
                let lr4 = y[3] + 2;
                let r1 = x1[0] + 1;
                let r2 = x1[1];
                let r3 = x1[2] - 1;
                let r4 = x1[3];
            }
            if(rotacija = 2){
                let lr1 = y[0] + 1;
                let lr2 = y[1];
                let lr3 = y[2] + 1;
                let lr4 = y[3];
                let r1 = x1[0] + 2;
                let r2 = x1[1];
                let r3 = x1[2] + 2;
                let r4 = x1[3];
            }
        }
        //I
        if(oblik = 3){
            if(rotacija = 0){
                let lr1 = y[0];
                let lr2 = y[1] + 1;
                let lr3 = y[2] + 2;
                let lr4 = y[3] + 3;
                let r1 = x1[0];
                let r2 = x1[1] - 1;
                let r3 = x1[2] - 2;
                let r4 = x1[3] - 3;
            }
        }
        //Z
        if(oblik = 4){
            if(rotacija = 0){
                let lr1 = y[0] + 2;
                let lr2 = y[1];
                let lr3 = y[2];
                let lr4 = y[3];
                let r1 = x1[0];
                let r2 = x1[1];
                let r3 = x1[2];
                let r4 = x1[3] - 2;
            }
        }
        //S
        if(oblik = 5){
            if(rotacija = 0){
                let lr1 = y[0];
                let lr2 = y[1];
                let lr3 = y[2];
                let lr4 = y[3] - 2;
                let r1 = x1[0] - 2;
                let r2 = x1[1];
                let r3 = x1[2];
                let r4 = x1[3];
            }else{
                let lr1 = y[0] + 2;
                let lr2 = y[1];
                let lr3 = y[2];
                let lr4 = y[3];
                let r1 = x1[0];
                let r2 = x1[1];
                let r3 = x1[2];
                let r4 = x1[3] - 2;
            }
        }
        //T
        if(oblik = 6){
            if(rotacija = 0){
                let lr1 = y[0] + 1;
                let lr2 = y[1];
                let lr3 = y[2];
                let lr4 = y[3];
                let r1 = x1[0] - 1;
                let r2 = x1[1];
                let r3 = x1[2];
                let r4 = x1[3];
            }
            if(rotacija = 2){
                let lr1 = y[0];
                let lr2 = y[1];
                let lr3 = y[2] - 1;
                let lr4 = y[3];
                let r1 = x1[0] -1;
                let r2 = x1[1];
                let r3 = x1[2] - 2;
                let r4 = x1[3];
            }
        }
        if((redovi[15*(r1 + 1) + lr1] = 0) & (redovi[15*(r2 + 1) + lr2] = 0) & (redovi[15*(r3 + 1) + lr3] = 0) & (redovi[15*(r4 + 1) + lr4] = 0)){
            return true;
        }else{
            return false;
        }
    }

    // vrh
    function bool kraj(){
        var int i;
        let i = 0;
        while(i < 16){
            if(redovi[15 + i] = 1){
                return false;
            }
            let i = i + 1;
        }
        return true;
    }


    //kraj igre
    function void krajigre(){
        do Screen.clearScreen();
        do Screen.drawLine(180, 80, 320, 80);
        do Screen.drawLine(180, 80, 180, 180);
        do Screen.drawLine(180, 180, 320, 180);
        do Screen.drawLine(320, 80, 320, 180);

        do Output.moveCursor(9, 27);
        do Output.printString("GAME OVER");
        
        do Output.moveCursor(11, 26);
        do Output.printString("Score: ");
        do Output.printInt(bodovanje);

        do Output.moveCursor(13, 27);
        do Output.printString("Razina: ");
        if(raz = 1){
            do Output.printString("1");
        }
        if(raz = 2){
            do Output.printString("2");
        }
        
        if(raz = 3){
            do Output.printString("3");
        }

        return;
    }
    // pr za grid
    function void prgrid(){
        var int i, j;
        let i = 1;
        let j = 1;
        while (j < 21){
            do Output.moveCursor(j, i + 40);
            do Output.printInt(redovi[15*j + i]);
            let i = i + 1;
            if(i = 16){
                let j = j + 1;
                let i = 1;
            }
        }
        return;
    }

}